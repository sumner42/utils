#!/usr/bin/perl
sub usage() { print STDERR
"########################################################################
# FILE: backup
#
# PURPOSE: Backup user changed directories to a tar file
#
# USAGE: backup [-v] [dirs]
#
# PARAMETERS: 
#   -v           Verbose mode
#   [dirs]       List of directories to backup. Default is built-in.
#
# EXAMPLE: backup -v bin Develop dot_files Pictures
#
# MODIFICATION HISTORY:
#   2020/09/27, SK Hushing III. Original issue for Fedora.
########################################################################
"; exit }

use strict;
use warnings;
use Getopt::Long;
Getopt::Long::Configure("bundling");

#----[ Initializations ]----#
my $script = `basename $0`; chomp($script);
my $date = `date +%Y_%m%d_%H%M`; chomp($date);
my $home = $ENV{HOME};
my $tarfile = "$home/Backups/backup_$date.tar";
chdir($home);

#----[ Handle command line options ]----#
my $dirs = "bin Dev-bk Develop dot_files Pictures";
my $v = 0;
GetOptions (
    "v+"  => \$v,
) or die "$script: Aborted.
";
usage() if scalar(@ARGV) > 0 && $ARGV[0] eq "help";

#----[ Create tar command ]----#
my $vopt = $v>1 ? "v" : "";
my $cmd = "tar c${vopt}f $tarfile $dirs";

#----[ Process list of directories to backup ]----#
if (scalar(@ARGV) > 0) {
    $dirs = "";
    foreach my $dir (@ARGV) {
	die("$script: No such directory ($dir)\n") if ! -d $dir;
	$dirs .= " " if $dirs ne "";
	$dirs .= $dir;
    }
    print STDERR "$script: backing up specified directories\n";
} else {
    print STDERR "$script: backing up default directories\n";
}

#----[ Print some variables for understanding ]----#
if ($v) {
    print "dirs:    $dirs\n";
    print "home:    $home\n";
    print "date:    $date\n";
    print "tarfile: $tarfile\n";
    print "cmd:     $cmd\n";
}

#----[ Grab current copies of dot files to dot_files directory ]----#
print "Copying certain dot files to dot_files directory\n" if $v;
system("cp -p .bash_logout dot_files/.");
system("cp -p .bash_profile dot_files/.");
system("cp -p .bashrc dot_files/.");
system("cp -p .exrc dot_files/.");
system("cp -p .gitconfig dot_files/.");
system("cp -p .gvimrc dot_files/.");
system("cp -p .viminfo dot_files/.");
system("cp -p .viminfo dot_files/.");

#----[ Create tarfile ]----#
system($cmd);
