#!/usr/bin/perl
sub usage() { print STDERR
'########################################################################
# FILE: dft
#
# PURPOSE: List mounted filesystems with sizes and summary
#
# USAGE: dft 
#
# PARAMETERS: 
#   -v           Verbose mode
#
# EXAMPLE: dft -v 
#
# MODIFICATION HISTORY:
#   2020/09/21, SK Hushing III. Original issue for Fedora.
########################################################################
'; exit }

use strict;
use warnings;
use Getopt::Long;
Getopt::Long::Configure("bundling");

#----[ Initializations ]----#
my $script = `basename $0`; chomp($script);

#----[ Handle command line options ]----#
my $v = 0;
GetOptions (
    "v+"  => \$v,
) or die ("newscript: * Unsupported option\n");
usage() if scalar(@ARGV) > 0 && $ARGV[0] eq "help";

#----[ Handle command line arguments ]----#
my $narg = @ARGV;
if (scalar(@ARGV) >= 1) {
    print STDERR "$script: * Unexpected argument(s) found\n" if $v;
    usage();
}
# $arg1 = $ARGV[0];

#----[ Body of script ]----#
# system("df -h") if $v;
print "#----- Beginning dft\n" if $v;
open(DF, "-|", "df -h 2>/dev/null") or die "error opening df pipe\n";
while (my $line = <DF>) {
    chomp($line);
    # print "line: $line\n" if $v;
    # next if $line =~ "Filesystem";
    next if $line =~ "tmpfs";
    next if $line =~ "boot";
    print "$line\n";
    # my ($fs,$sz,$us,$av,$pct,$mnt) = split(/  */, $line);
    # print "$fs $sz $pct $mnt\n";
}
close(DF);
print "#----- Finished dft\n" if $v;

